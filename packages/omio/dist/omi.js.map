{"version":3,"sources":["../src/vnode.js","../src/h.js","../src/util.js","../src/clone-element.js","../src/constants.js","../src/render-queue.js","../src/vdom/index.js","../src/dom/index.js","../src/vdom/diff.js","../src/vdom/component-recycler.js","../src/style.js","../src/obaa.js","../src/tick.js","../src/observe.js","../src/vdom/component.js","../src/component.js","../src/render.js","../src/define.js","../src/model-view.js","../src/class.js","../src/options.js","../src/rpx.js","../src/omi.js"],"names":["VNode","h","nodeName","attributes","lastSimple","child","simple","i","children","EMPTY_CHILDREN","arguments","length","stack","push","pop","undefined","String","p","key","options","vnode","toObject","val","TypeError","Object","assign","target","source","from","to","symbols","s","hasOwnProperty","call","getOwnPropertySymbols","propIsEnumerable","extend","obj","props","isArray","prototype","toString","nProps","result","keys","forEach","value","cloneElement","slice","ATTR_KEY","component","debounceRendering","defer","rerender","items","enqueueRender","renderComponent","isNamedNode","_componentConstructor","node","normalizedNodeName","toLowerCase","defaultProps","doc","createElementNS","createElement","_ref","createNode","a","b","cssTxt","isSvg","rule","split","map","o","x","trim","replace","Array","Symbol","iterator","_ref3","properties","next","done","_ref2","property","style","parseCSSText","match","cssText","parentNode","removeChild","setAccessor","name","old","className","IS_NON_DIMENSIONAL","test","oldJson","currentJson","changed","ckey","setStyles","substring","eventProxy","useCapture","removeEventListener","_listeners","innerHTML","setProperty","removeAttribute","ns","addEventListener","setAttributeNS","setAttribute","e","this","type","event","diffLevel","c","mounts","isSvgMode","afterMount","diff","dom","context","mountAll","parent","componentRoot","ret","appendChild","hydrating","out","prevSvgMode","vnodeName","mapping","_component","buildComponentFromVNode","document","createTextNode","replaceChild","recollectNodeTree","vchildren","fc","nodeValue","innerDiffNode","isHydrating","j","originalChildren","keyed","keyedLen","childrenLen","vlen","_child","f","__key","vchild","splitText","len","min","nextSibling","idiff","removeNode","insertBefore","unmountOnly","removeChildren","previousSibling","attrs","collectComponent","components","Ctor","render","inst","constructor","Component","createComponent","list","nextBase","splice","data","getCtorName","ctor","item","styleCache","attrName","styleId","prefix","re","css","g0","g1","g2","g3","appendClass","addStyle","id","ele","head","getElementsByTagName","someThingStyles","getElementById","textContent","window","ActiveXObject","styleSheet","addStyleWithoutId","attr","scopeVdom","_preCss","scopedStyle","vdom","staticStyleMapping","addScopedAttrStatic","scoper","fireTick","size","scope","callbacks","nextItem","fn","timeout","nextTickCallback","clearTimeout","proxyUpdate","update","setComponentProps","opts","_disable","install","observe","receiveProps","beforeInstall","prevProps","base","shallowComparison","isChild","previousProps","previousState","isUpdate","initialBase","initialChildComponent","previousContext","rendered","cbase","beforeUpdate","FORCE_RENDER","skip","prevState","prevContext","beforeRender","dynamicCss","elementId","scopeHost","___scopedCssAttr","getChildContext","childComponent","childProps","getNodeProps","toUnmount","baseParent","SYNC_RENDER","componentRef","t","unshift","_parentComponent","afterUpdate","updated","_renderCallbacks","flushMounts","oldDom","originalComponent","isDirectOwner","isOwner","unmountComponent","inner","ref","instance","Constructor","querySelector","store","merge","getUpdatePath","OBJECTTYPE","ARRAYTYPE","pure","updatePath","dataToPath","_objToPath","_arrayToPath","path","index","Number","_classCallCheck$1","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","create","enumerable","writable","configurable","setPrototypeOf","__proto__","ModelView","hasOwn","classNames","apply","arg","classes","argType","join","extractClass","_Array$prototype$slic","class","args","isWeb","root","global","Math","propertyIsEnumerable","Element","runListeners","oEvent","iLstId","iElId","oEvtListeners","oListeners","aEls","aEvts","sEventType","fListener","nElIdx","aElListeners","proto","propertiesObject","F","Error","usePromise","Promise","__config__","platform","systemVersion","resolve","then","bind","setTimeout","ASYNC_RENDER","obaa","arr","callback","_observe","$observer","eventPropArr","prop","isInArray","$observeProps","$observerPath","isString","watch","propertyChangedHandler","propChanged","onPropertyChanged","all","handler","oldValue","rootName","_getRootName","mock","methods","RegExp","cprop","isFunction","toUpperCase","get","currentValue","set","triggerStr","add","exec","_classCallCheck","__ref","componentChange","_willUpdate","every","is","_Component","str","WeElement","rpx","defineElement","version","define","module","exports","Omi$1","Omi"],"mappings":"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","file":"omi.js","sourcesContent":["/** Virtual DOM Node */\nexport function VNode() {}\n","import { VNode } from './vnode'\nimport options from './options'\n\nconst stack = []\n\nconst EMPTY_CHILDREN = []\n\n/**\n * JSX/hyperscript reviver.\n * @see http://jasonformat.com/wtf-is-jsx\n * Benchmarks: https://esbench.com/bench/57ee8f8e330ab09900a1a1a0\n *\n * Note: this is exported as both `h()` and `createElement()` for compatibility reasons.\n *\n * Creates a VNode (virtual DOM element). A tree of VNodes can be used as a lightweight representation\n * of the structure of a DOM tree. This structure can be realized by recursively comparing it against\n * the current _actual_ DOM structure, and applying only the differences.\n *\n * `h()`/`createElement()` accepts an element name, a list of attributes/props,\n * and optionally children to append to the element.\n *\n * @example The following DOM tree\n *\n * `<div id=\"foo\" name=\"bar\">Hello!</div>`\n *\n * can be constructed using this function as:\n *\n * `h('div', { id: 'foo', name : 'bar' }, 'Hello!');`\n *\n * @param {string} nodeName\tAn element name. Ex: `div`, `a`, `span`, etc.\n * @param {Object} attributes\tAny attributes/props to set on the created element.\n * @param rest\t\t\tAdditional arguments are taken to be children to append. Can be infinitely nested Arrays.\n *\n * @public\n */\nexport function h(nodeName, attributes) {\n  let children = EMPTY_CHILDREN,\n    lastSimple,\n    child,\n    simple,\n    i\n  for (i = arguments.length; i-- > 2; ) {\n    stack.push(arguments[i])\n  }\n  if (attributes && attributes.children != null) {\n    if (!stack.length) stack.push(attributes.children)\n    delete attributes.children\n  }\n  while (stack.length) {\n    if ((child = stack.pop()) && child.pop !== undefined) {\n      for (i = child.length; i--; ) stack.push(child[i])\n    } else {\n      if (typeof child === 'boolean') child = null\n\n      if ((simple = typeof nodeName !== 'function')) {\n        if (child == null) child = ''\n        else if (typeof child === 'number') child = String(child)\n        else if (typeof child !== 'string') simple = false\n      }\n\n      if (simple && lastSimple) {\n        children[children.length - 1] += child\n      } else if (children === EMPTY_CHILDREN) {\n        children = [child]\n      } else {\n        children.push(child)\n      }\n\n      lastSimple = simple\n    }\n  }\n\n  let p = new VNode()\n  p.nodeName = nodeName\n  p.children = children\n\tp.attributes = attributes == null ? undefined : attributes\n  p.key = attributes == null ? undefined : attributes.key\n\n  // if a \"vnode hook\" is defined, pass every created VNode to it\n  if (options.vnode !== undefined) options.vnode(p)\n\n  return p\n}\n","'use strict'\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols\nvar hasOwnProperty = Object.prototype.hasOwnProperty\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable\n\nfunction toObject(val) {\n  if (val === null || val === undefined) {\n    throw new TypeError('Object.assign cannot be called with null or undefined')\n  }\n\n  return Object(val)\n}\n\nexport function assign(target, source) {\n  var from\n  var to = toObject(target)\n  var symbols\n\n  for (var s = 1; s < arguments.length; s++) {\n    from = Object(arguments[s])\n\n    for (var key in from) {\n      if (hasOwnProperty.call(from, key)) {\n        to[key] = from[key]\n      }\n    }\n\n    if (getOwnPropertySymbols) {\n      symbols = getOwnPropertySymbols(from)\n      for (var i = 0; i < symbols.length; i++) {\n        if (propIsEnumerable.call(from, symbols[i])) {\n          to[symbols[i]] = from[symbols[i]]\n        }\n      }\n    }\n  }\n\n  return to\n}\n\nif (!Element.prototype.addEventListener) {\n  var oListeners = {};\n  function runListeners(oEvent) {\n    if (!oEvent) { oEvent = window.event; }\n    for (var iLstId = 0, iElId = 0, oEvtListeners = oListeners[oEvent.type]; iElId < oEvtListeners.aEls.length; iElId++) {\n      if (oEvtListeners.aEls[iElId] === this) {\n        for (iLstId; iLstId < oEvtListeners.aEvts[iElId].length; iLstId++) { oEvtListeners.aEvts[iElId][iLstId].call(this, oEvent); }\n        break;\n      }\n    }\n  }\n  Element.prototype.addEventListener = function (sEventType, fListener /*, useCapture (will be ignored!) */) {\n    if (oListeners.hasOwnProperty(sEventType)) {\n      var oEvtListeners = oListeners[sEventType];\n      for (var nElIdx = -1, iElId = 0; iElId < oEvtListeners.aEls.length; iElId++) {\n        if (oEvtListeners.aEls[iElId] === this) { nElIdx = iElId; break; }\n      }\n      if (nElIdx === -1) {\n        oEvtListeners.aEls.push(this);\n        oEvtListeners.aEvts.push([fListener]);\n        this[\"on\" + sEventType] = runListeners;\n      } else {\n        var aElListeners = oEvtListeners.aEvts[nElIdx];\n        if (this[\"on\" + sEventType] !== runListeners) {\n          aElListeners.splice(0);\n          this[\"on\" + sEventType] = runListeners;\n        }\n        for (var iLstId = 0; iLstId < aElListeners.length; iLstId++) {\n          if (aElListeners[iLstId] === fListener) { return; }\n        }\n        aElListeners.push(fListener);\n      }\n    } else {\n      oListeners[sEventType] = { aEls: [this], aEvts: [[fListener]] };\n      this[\"on\" + sEventType] = runListeners;\n    }\n  };\n  Element.prototype.removeEventListener = function (sEventType, fListener /*, useCapture (will be ignored!) */) {\n    if (!oListeners.hasOwnProperty(sEventType)) { return; }\n    var oEvtListeners = oListeners[sEventType];\n    for (var nElIdx = -1, iElId = 0; iElId < oEvtListeners.aEls.length; iElId++) {\n      if (oEvtListeners.aEls[iElId] === this) { nElIdx = iElId; break; }\n    }\n    if (nElIdx === -1) { return; }\n    for (var iLstId = 0, aElListeners = oEvtListeners.aEvts[nElIdx]; iLstId < aElListeners.length; iLstId++) {\n      if (aElListeners[iLstId] === fListener) { aElListeners.splice(iLstId, 1); }\n    }\n  };\n}\n\n\nif (typeof Object.create !== 'function') {\n  Object.create = function(proto, propertiesObject) {\n    if (typeof proto !== 'object' && typeof proto !== 'function') {\n      throw new TypeError('Object prototype may only be an Object: ' + proto)\n    } else if (proto === null) {\n      throw new Error(\n        \"This browser's implementation of Object.create is a shim and doesn't support 'null' as the first argument.\"\n      )\n    }\n\n    // if (typeof propertiesObject != 'undefined') {\n    //     throw new Error(\"This browser's implementation of Object.create is a shim and doesn't support a second argument.\");\n    // }\n\n    function F() {}\n    F.prototype = proto\n\n    return new F()\n  }\n}\n\nif (!String.prototype.trim) {\n  String.prototype.trim = function () {\n    return this.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, '')\n  }\n}\n\n/**\n *  Copy all properties from `props` onto `obj`.\n *  @param {Object} obj\t\tObject onto which properties should be copied.\n *  @param {Object} props\tObject from which to copy properties.\n *  @returns obj\n *  @private\n */\nexport function extend(obj, props) {\n  for (let i in props) obj[i] = props[i]\n  return obj\n}\n\n/**\n * Call a function asynchronously, as soon as possible. Makes\n * use of HTML Promise to schedule the callback if available,\n * otherwise falling back to `setTimeout` (mainly for IE<11).\n *\n * @param {Function} callback\n */\n\nlet usePromise = typeof Promise == 'function'\n\n// for native\nif (\n  typeof document !== 'object' &&\n  typeof global !== 'undefined' &&\n  global.__config__\n) {\n  if (global.__config__.platform === 'android') {\n    usePromise = true\n  } else {\n    let systemVersion =\n      (global.__config__.systemVersion &&\n        global.__config__.systemVersion.split('.')[0]) ||\n      0\n    if (systemVersion > 8) {\n      usePromise = true\n    }\n  }\n}\n\nexport const defer = usePromise\n  ? Promise.resolve().then.bind(Promise.resolve())\n  : setTimeout\n\nexport function isArray(obj) {\n  return Object.prototype.toString.call(obj) === '[object Array]'\n}\n\nexport function nProps(props) {\n  if (!props || isArray(props)) return {}\n  const result = {}\n  Object.keys(props).forEach(key => {\n    result[key] = props[key].value\n  })\n  return result\n}","import { extend } from './util'\nimport { h } from './h'\n\n/**\n * Clones the given VNode, optionally adding attributes/props and replacing its children.\n * @param {VNode} vnode\t\tThe virtual DOM element to clone\n * @param {Object} props\tAttributes/props to add when cloning\n * @param {VNode} rest\t\tAny additional arguments will be used as replacement children.\n */\nexport function cloneElement(vnode, props) {\n  return h(\n    vnode.nodeName,\n    extend(extend({}, vnode.attributes), props),\n    arguments.length > 2 ? [].slice.call(arguments, 2) : vnode.children\n  )\n}\n","// render modes\n\nexport const NO_RENDER = 0\nexport const SYNC_RENDER = 1\nexport const FORCE_RENDER = 2\nexport const ASYNC_RENDER = 3\n\nexport const ATTR_KEY = '__omiattr_'\n\n// DOM properties that should NOT have \"px\" added when numeric\nexport const IS_NON_DIMENSIONAL = /acit|ex(?:s|g|n|p|$)|rph|ows|mnc|ntw|ine[ch]|zoo|^ord/i\n","import options from './options'\nimport { defer } from './util'\nimport { renderComponent } from './vdom/component'\n\n/** Managed queue of dirty components to be re-rendered */\n\nlet items = []\n\nexport function enqueueRender(component) {\n  if (items.push(component) == 1) {\n    ;(options.debounceRendering || defer)(rerender)\n  }\n}\n\n/** Rerender all enqueued dirty components */\nexport function rerender() {\n\tlet p\n\twhile ( (p = items.pop()) ) {\n    renderComponent(p)\n\t}\n}","import { extend } from '../util'\nimport options from '../options'\n/**\n * Check if two nodes are equivalent.\n *\n * @param {Node} node\t\t\tDOM Node to compare\n * @param {VNode} vnode\t\t\tVirtual DOM node to compare\n * @param {boolean} [hydrating=false]\tIf true, ignores component constructors when comparing.\n * @private\n */\nexport function isSameNodeType(node, vnode, hydrating) {\n  if (typeof vnode === 'string' || typeof vnode === 'number') {\n    return node.splitText !== undefined\n  }\n  const ctor = options.mapping[vnode.nodeName]\n  if (ctor) {\n    return hydrating || node._componentConstructor === ctor\n  }\n  return !node._componentConstructor && isNamedNode(node, vnode.nodeName)\n}\n\n/**\n * Check if an Element has a given nodeName, case-insensitively.\n *\n * @param {Element} node\tA DOM Element to inspect the name of.\n * @param {String} nodeName\tUnnormalized name to compare against.\n */\nexport function isNamedNode(node, nodeName) {\n  return (\n    node.normalizedNodeName === nodeName ||\n    node.nodeName.toLowerCase() === nodeName.toLowerCase()\n  )\n}\n\n/**\n * Reconstruct Component-style `props` from a VNode.\n * Ensures default/fallback values from `defaultProps`:\n * Own-properties of `defaultProps` not present in `vnode.attributes` are added.\n *\n * @param {VNode} vnode\n * @returns {Object} props\n */\nexport function getNodeProps(vnode) {\n  let props = extend({}, vnode.attributes)\n  props.children = vnode.children\n\n  let defaultProps = vnode.nodeName.defaultProps\n  if (defaultProps !== undefined) {\n    for (let i in defaultProps) {\n      if (props[i] === undefined) {\n        props[i] = defaultProps[i]\n      }\n    }\n  }\n\n  return props\n}\n","import { IS_NON_DIMENSIONAL } from '../constants'\nimport options from '../options'\n\n/** Create an element with the given nodeName.\n *\t@param {String} nodeName\n *\t@param {Boolean} [isSvg=false]\tIf `true`, creates an element within the SVG namespace.\n *\t@returns {Element} node\n */\nexport function createNode(nodeName, isSvg) {\n  let node = isSvg\n    ? options.doc.createElementNS('http://www.w3.org/2000/svg', nodeName)\n    : options.doc.createElement(nodeName)\n  node.normalizedNodeName = nodeName\n  return node\n}\n\nfunction parseCSSText(cssText) {\n  let cssTxt = cssText.replace(/\\/\\*(.|\\s)*?\\*\\//g, ' ').replace(/\\s+/g, ' ')\n  let style = {},\n    [a, b, rule] = cssTxt.match(/ ?(.*?) ?{([^}]*)}/) || [a, b, cssTxt]\n  let cssToJs = s => s.replace(/\\W+\\w/g, match => match.slice(-1).toUpperCase())\n  let properties = rule\n    .split(';')\n    .map(o => o.split(':').map(x => x && x.trim()))\n  for (let [property, value] of properties) style[cssToJs(property)] = value\n  return style\n}\n\n/** Remove a child node from its parent if attached.\n *\t@param {Element} node\t\tThe node to remove\n */\nexport function removeNode(node) {\n  let parentNode = node.parentNode\n  if (parentNode) parentNode.removeChild(node)\n}\n\n/** Set a named attribute on the given Node, with special behavior for some names and event handlers.\n *\tIf `value` is `null`, the attribute/handler will be removed.\n *\t@param {Element} node\tAn element to mutate\n *\t@param {string} name\tThe name/key to set, such as an event or attribute name\n *\t@param {any} old\tThe last value that was set for this name/node pair\n *\t@param {any} value\tAn attribute value, such as a function to be used as an event handler\n *\t@param {Boolean} isSvg\tAre we currently diffing inside an svg?\n *\t@private\n */\nexport function setAccessor(node, name, old, value, isSvg) {\n  if (name === 'className') name = 'class'\n\n  if (name === 'key') {\n    // ignore\n  } else if (name === 'ref') {\n    if (old) old(null)\n    if (value) value(node)\n  } else if (name === 'class' && !isSvg) {\n    node.className = value || ''\n  } else if (name === 'style') {\n    if (options.isWeb) {\n      if (!value || typeof value === 'string' || typeof old === 'string') {\n        node.style.cssText = value || ''\n      }\n      if (value && typeof value === 'object') {\n        if (typeof old !== 'string') {\n          for (let i in old) if (!(i in value)) node.style[i] = ''\n        }\n        for (let i in value) {\n          node.style[i] =\n            typeof value[i] === 'number' && IS_NON_DIMENSIONAL.test(i) === false\n              ? value[i] + 'px'\n              : value[i]\n        }\n      }\n    } else {\n      let oldJson = old,\n        currentJson = value\n      if (typeof old === 'string') {\n        oldJson = parseCSSText(old)\n      }\n      if (typeof value == 'string') {\n        currentJson = parseCSSText(value)\n      }\n\n      let result = {},\n        changed = false\n\n      if (oldJson) {\n        for (let key in oldJson) {\n          if (typeof currentJson == 'object' && !(key in currentJson)) {\n            result[key] = ''\n            changed = true\n          }\n        }\n\n        for (let ckey in currentJson) {\n          if (currentJson[ckey] !== oldJson[ckey]) {\n            result[ckey] = currentJson[ckey]\n            changed = true\n          }\n        }\n\n        if (changed) {\n          node.setStyles(result)\n        }\n      } else {\n        node.setStyles(currentJson)\n      }\n    }\n  } else if (name === 'dangerouslySetInnerHTML') {\n    if (value) node.innerHTML = value.__html || ''\n  } else if (name[0] == 'o' && name[1] == 'n') {\n    let useCapture = name !== (name = name.replace(/Capture$/, ''))\n    name = name.toLowerCase().substring(2)\n    if (value) {\n      if (!old) node.addEventListener(name, eventProxy, useCapture)\n    } else {\n      node.removeEventListener(name, eventProxy, useCapture)\n    }\n    ;(node._listeners || (node._listeners = {}))[name] = value\n  } else if (name !== 'list' && name !== 'type' && !isSvg && name in node) {\n    setProperty(node, name, value == null ? '' : value)\n    if (value == null || value === false) node.removeAttribute(name)\n  } else {\n    let ns = isSvg && name !== (name = name.replace(/^xlink:?/, ''))\n    if (value == null || value === false) {\n      if (ns)\n        node.removeAttributeNS(\n          'http://www.w3.org/1999/xlink',\n          name.toLowerCase()\n        )\n      else node.removeAttribute(name)\n    } else if (typeof value !== 'function') {\n      if (ns)\n        node.setAttributeNS(\n          'http://www.w3.org/1999/xlink',\n          name.toLowerCase(),\n          value\n        )\n      else node.setAttribute(name, value)\n    }\n  }\n}\n\n/** Attempt to set a DOM property to the given value.\n *\tIE & FF throw for certain property-value combinations.\n */\nfunction setProperty(node, name, value) {\n  try {\n    node[name] = value\n  } catch (e) {}\n}\n\n/** Proxy an event to hooked event handlers\n *\t@private\n */\nfunction eventProxy(e) {\n  return this._listeners[e.type]((options.event && options.event(e)) || e)\n}\n","import { ATTR_KEY } from '../constants'\nimport { isSameNodeType, isNamedNode } from './index'\nimport { buildComponentFromVNode } from './component'\nimport { createNode, setAccessor } from '../dom/index'\nimport { unmountComponent } from './component'\nimport options from '../options'\nimport { removeNode } from '../dom/index'\nimport { isArray } from '../util'\n\n/** Queue of components that have been mounted and are awaiting componentDidMount */\nexport const mounts = []\n\n/** Diff recursion count, used to track the end of the diff cycle. */\nexport let diffLevel = 0\n\n/** Global flag indicating if the diff is currently within an SVG */\nlet isSvgMode = false\n\n/** Global flag indicating if the diff is performing hydration */\nlet hydrating = false\n\n/** Invoke queued componentDidMount lifecycle methods */\nexport function flushMounts() {\n  let c\n  while ((c = mounts.pop())) {\n    if (options.afterMount) options.afterMount(c)\n    if (c.installed) c.installed()\n  }\n}\n\n/** Apply differences in a given vnode (and it's deep children) to a real DOM Node.\n *\t@param {Element} [dom=null]\t\tA DOM node to mutate into the shape of the `vnode`\n *\t@param {VNode} vnode\t\t\tA VNode (with descendants forming a tree) representing the desired DOM structure\n *\t@returns {Element} dom\t\t\tThe created/mutated element\n *\t@private\n */\nexport function diff(dom, vnode, context, mountAll, parent, componentRoot) {\n  // diffLevel having been 0 here indicates initial entry into the diff (not a subdiff)\n  if (!diffLevel++) {\n    // when first starting the diff, check if we're diffing an SVG or within an SVG\n    isSvgMode = parent != null && parent.ownerSVGElement !== undefined\n\n    // hydration is indicated by the existing element to be diffed not having a prop cache\n    hydrating = dom != null && !(ATTR_KEY in dom)\n  }\n  let ret\n\n  if (isArray(vnode)) {\n    vnode = {\n      nodeName: 'span',\n      children: vnode\n    }\n  }\n\n  ret = idiff(dom, vnode, context, mountAll, componentRoot)\n  // append the element if its a new parent\n  if (parent && ret.parentNode !== parent) parent.appendChild(ret)\n\n  // diffLevel being reduced to 0 means we're exiting the diff\n  if (!--diffLevel) {\n    hydrating = false\n    // invoke queued componentDidMount lifecycle methods\n    if (!componentRoot) flushMounts()\n  }\n\n  return ret\n}\n\n/** Internals of `diff()`, separated to allow bypassing diffLevel / mount flushing. */\nfunction idiff(dom, vnode, context, mountAll, componentRoot) {\n  let out = dom,\n    prevSvgMode = isSvgMode\n\n  // empty values (null, undefined, booleans) render as empty Text nodes\n  if (vnode == null || typeof vnode === 'boolean') vnode = ''\n\n  // If the VNode represents a Component, perform a component diff:\n  let vnodeName = vnode.nodeName\n  if (options.mapping[vnodeName]) {\n    vnode.nodeName = options.mapping[vnodeName]\n    return buildComponentFromVNode(dom, vnode, context, mountAll)\n  }\n\n  // Fast case: Strings & Numbers create/update Text nodes.\n  if (typeof vnode === 'string' || typeof vnode === 'number') {\n    // update if it's already a Text node:\n    if (\n      dom &&\n      dom.splitText !== undefined &&\n      dom.parentNode &&\n      (!dom._component || componentRoot)\n    ) {\n      /* istanbul ignore if */ /* Browser quirk that can't be covered: https://github.com/developit/preact/commit/fd4f21f5c45dfd75151bd27b4c217d8003aa5eb9 */\n      if (dom.nodeValue != vnode) {\n        dom.nodeValue = vnode\n      }\n    } else {\n      // it wasn't a Text node: replace it with one and recycle the old Element\n      out = document.createTextNode(vnode)\n      if (dom) {\n        if (dom.parentNode) dom.parentNode.replaceChild(out, dom)\n        recollectNodeTree(dom, true)\n      }\n    }\n\n    //ie8 error\n    try {\n      out[ATTR_KEY] = true\n    } catch (e) {}\n\n    return out\n  }\n\n  // Tracks entering and exiting SVG namespace when descending through the tree.\n  isSvgMode =\n    vnodeName === 'svg'\n      ? true\n      : vnodeName === 'foreignObject'\n      ? false\n      : isSvgMode\n\n  // If there's no existing element or it's the wrong type, create a new one:\n  vnodeName = String(vnodeName)\n  if (!dom || !isNamedNode(dom, vnodeName)) {\n    out = createNode(vnodeName, isSvgMode)\n\n    if (dom) {\n      // move children into the replacement node\n      while (dom.firstChild) out.appendChild(dom.firstChild)\n\n      // if the previous Element was mounted into the DOM, replace it inline\n      if (dom.parentNode) dom.parentNode.replaceChild(out, dom)\n\n      // recycle the old element (skips non-Element node types)\n      recollectNodeTree(dom, true)\n    }\n  }\n\n  let fc = out.firstChild,\n    props = out[ATTR_KEY],\n    vchildren = vnode.children\n\n  if (props == null) {\n    props = out[ATTR_KEY] = {}\n    for (let a = out.attributes, i = a.length; i--; )\n      props[a[i].name] = a[i].value\n  }\n\n  // Optimization: fast-path for elements containing a single TextNode:\n  if (\n    !hydrating &&\n    vchildren &&\n    vchildren.length === 1 &&\n    typeof vchildren[0] === 'string' &&\n    fc != null &&\n    fc.splitText !== undefined &&\n    fc.nextSibling == null\n  ) {\n    if (fc.nodeValue != vchildren[0]) {\n      fc.nodeValue = vchildren[0]\n    }\n  }\n  // otherwise, if there are existing or new children, diff them:\n  else if ((vchildren && vchildren.length) || fc != null) {\n    innerDiffNode(\n      out,\n      vchildren,\n      context,\n      mountAll,\n      hydrating || props.dangerouslySetInnerHTML != null\n    )\n  }\n\n  // Apply attributes/props from VNode to the DOM Element:\n  diffAttributes(out, vnode.attributes, props)\n\n  // restore previous SVG mode: (in case we're exiting an SVG namespace)\n  isSvgMode = prevSvgMode\n\n  return out\n}\n\n/** Apply child and attribute changes between a VNode and a DOM Node to the DOM.\n *\t@param {Element} dom\t\t\tElement whose children should be compared & mutated\n *\t@param {Array} vchildren\t\tArray of VNodes to compare to `dom.childNodes`\n *\t@param {Object} context\t\t\tImplicitly descendant context object (from most recent `getChildContext()`)\n *\t@param {Boolean} mountAll\n *\t@param {Boolean} isHydrating\tIf `true`, consumes externally created elements similar to hydration\n */\nfunction innerDiffNode(dom, vchildren, context, mountAll, isHydrating) {\n  let originalChildren = dom.childNodes,\n    children = [],\n    keyed = {},\n    keyedLen = 0,\n    min = 0,\n    len = originalChildren.length,\n    childrenLen = 0,\n    vlen = vchildren ? vchildren.length : 0,\n    j,\n    c,\n    f,\n    vchild,\n    child\n\n  // Build up a map of keyed children and an Array of unkeyed children:\n  if (len !== 0) {\n    for (let i = 0; i < len; i++) {\n      let child = originalChildren[i],\n        props = child[ATTR_KEY],\n        key =\n          vlen && props\n            ? child._component\n              ? child._component.__key\n              : props.key\n            : null\n      if (key != null) {\n        keyedLen++\n        keyed[key] = child\n      } else if (\n        props ||\n        (child.splitText !== undefined\n          ? isHydrating\n            ? child.nodeValue.trim()\n            : true\n          : isHydrating)\n      ) {\n        children[childrenLen++] = child\n      }\n    }\n  }\n\n  if (vlen !== 0) {\n    for (let i = 0; i < vlen; i++) {\n      vchild = vchildren[i]\n      child = null\n\n      // attempt to find a node based on key matching\n      let key = vchild.key\n      if (key != null) {\n        if (keyedLen && keyed[key] !== undefined) {\n          child = keyed[key]\n          keyed[key] = undefined\n          keyedLen--\n        }\n      }\n      // attempt to pluck a node of the same type from the existing children\n      else if (!child && min < childrenLen) {\n        for (j = min; j < childrenLen; j++) {\n          if (\n            children[j] !== undefined &&\n            isSameNodeType((c = children[j]), vchild, isHydrating)\n          ) {\n            child = c\n            children[j] = undefined\n            if (j === childrenLen - 1) childrenLen--\n            if (j === min) min++\n            break\n          }\n        }\n      }\n\n      // morph the matched/found/created DOM child to match vchild (deep)\n      child = idiff(child, vchild, context, mountAll)\n\n      f = originalChildren[i]\n      if (child && child !== dom && child !== f) {\n        if (f == null) {\n          dom.appendChild(child)\n        } else if (child === f.nextSibling) {\n          removeNode(f)\n        } else {\n          dom.insertBefore(child, f)\n        }\n      }\n    }\n  }\n\n  // remove unused keyed children:\n  if (keyedLen) {\n    for (let i in keyed)\n      if (keyed[i] !== undefined) recollectNodeTree(keyed[i], false)\n  }\n\n  // remove orphaned unkeyed children:\n  while (min <= childrenLen) {\n    if ((child = children[childrenLen--]) !== undefined)\n      recollectNodeTree(child, false)\n  }\n}\n\n/** Recursively recycle (or just unmount) a node and its descendants.\n *\t@param {Node} node\t\t\t\t\t\tDOM node to start unmount/removal from\n *\t@param {Boolean} [unmountOnly=false]\tIf `true`, only triggers unmount lifecycle, skips removal\n */\nexport function recollectNodeTree(node, unmountOnly) {\n  let component = node._component\n  if (component) {\n    // if node is owned by a Component, unmount that component (ends up recursing back here)\n    unmountComponent(component)\n  } else {\n    // If the node's VNode had a ref function, invoke it with null here.\n    // (this is part of the React spec, and smart for unsetting references)\n    if (node[ATTR_KEY] != null && node[ATTR_KEY].ref) node[ATTR_KEY].ref(null)\n\n    if (unmountOnly === false || node[ATTR_KEY] == null) {\n      removeNode(node)\n    }\n\n    removeChildren(node)\n  }\n}\n\n/** Recollect/unmount all children.\n *\t- we use .lastChild here because it causes less reflow than .firstChild\n *\t- it's also cheaper than accessing the .childNodes Live NodeList\n */\nexport function removeChildren(node) {\n  node = node.lastChild\n  while (node) {\n    let next = node.previousSibling\n    recollectNodeTree(node, true)\n    node = next\n  }\n}\n\n/** Apply differences in attributes from a VNode to the given DOM Element.\n *\t@param {Element} dom\t\tElement with attributes to diff `attrs` against\n *\t@param {Object} attrs\t\tThe desired end-state key-value attribute pairs\n *\t@param {Object} old\t\t\tCurrent/previous attributes (from previous VNode or element's prop cache)\n */\nfunction diffAttributes(dom, attrs, old) {\n  let name\n\n  // remove attributes no longer present on the vnode by setting them to undefined\n  for (name in old) {\n    if (!(attrs && attrs[name] != null) && old[name] != null) {\n      setAccessor(dom, name, old[name], (old[name] = undefined), isSvgMode)\n    }\n  }\n\n  // add new & update changed attributes\n  for (name in attrs) {\n    if (\n      name !== 'children' &&\n      name !== 'innerHTML' &&\n      (!(name in old) ||\n        attrs[name] !==\n          (name === 'value' || name === 'checked' ? dom[name] : old[name]))\n    ) {\n      setAccessor(dom, name, old[name], (old[name] = attrs[name]), isSvgMode)\n    }\n  }\n}\n","import Component from '../component'\nimport options from '../options'\n/** Retains a pool of Components for re-use, keyed on component name.\n *\tNote: since component names are not unique or even necessarily available, these are primarily a form of sharding.\n *\t@private\n */\nconst components = {}\n\n/** Reclaim a component for later re-use by the recycler. */\nexport function collectComponent(component) {\n  let name = component.constructor.name\n  ;(components[name] || (components[name] = [])).push(component)\n}\n\n/** Create a component. Normalizes differences between PFC's and classful Components. */\nexport function createComponent(Ctor, props, context, vnode) {\n  let list = components[Ctor.name],\n    inst\n\n  if (Ctor.prototype && Ctor.prototype.render) {\n    inst = new Ctor(props, context)\n    Component.call(inst, props, context)\n  } else {\n    inst = new Component(props, context)\n    inst.constructor = Ctor\n    inst.render = doRender\n  }\n  vnode && (inst.___scopedCssAttr = vnode.css)\n\n  if (list) {\n    for (let i = list.length; i--; ) {\n      if (list[i].constructor === Ctor) {\n        inst.nextBase = list[i].nextBase\n        list.splice(i, 1)\n        break\n      }\n    }\n  }\n  return inst\n}\n\n/** The `.render()` method for a PFC backing instance. */\nfunction doRender(props, data, context) {\n  return this.constructor(props, context)\n}\n","import options from './options'\n\nlet styleId = 0\n\nexport function getCtorName(ctor) {\n  for (let i = 0, len = options.styleCache.length; i < len; i++) {\n    let item = options.styleCache[i]\n\n    if (item.ctor === ctor) {\n      return item.attrName\n    }\n  }\n\n  let attrName = 's' + styleId\n  options.styleCache.push({ ctor, attrName })\n  styleId++\n\n  return attrName\n}\n\n// many thanks to https://github.com/thomaspark/scoper/\nexport function scoper(css, prefix) {\n  prefix = '[' + prefix.toLowerCase() + ']'\n  // https://www.w3.org/TR/css-syntax-3/#lexical\n  css = css.replace(/\\/\\*[^*]*\\*+([^/][^*]*\\*+)*\\//g, '')\n  // eslint-disable-next-line\n    let re = new RegExp('([^\\r\\n,{}:]+)(:[^\\r\\n,{}]+)?(,(?=[^{}]*{)|\\s*{)', 'g')\n  /**\n   * Example:\n   *\n   * .classname::pesudo { color:red }\n   *\n   * g1 is normal selector `.classname`\n   * g2 is pesudo class or pesudo element\n   * g3 is the suffix\n   */\n  css = css.replace(re, (g0, g1, g2, g3) => {\n    if (typeof g2 === 'undefined') {\n      g2 = ''\n    }\n\n    /* eslint-ignore-next-line */\n    if (\n      g1.match(\n        /^\\s*(@media|\\d+%?|@-webkit-keyframes|@keyframes|to|from|@font-face)/\n      )\n    ) {\n      return g1 + g2 + g3\n    }\n\n    let appendClass = g1.replace(/(\\s*)$/, '') + prefix + g2\n    //let prependClass = prefix + ' ' + g1.trim() + g2;\n\n    return appendClass + g3\n    //return appendClass + ',' + prependClass + g3;\n  })\n\n  return css\n}\n\nexport function addStyle(cssText, id) {\n  id = id.toLowerCase()\n  let ele = document.getElementById(id)\n  let head = document.getElementsByTagName('head')[0]\n  if (ele && ele.parentNode === head) {\n    head.removeChild(ele)\n  }\n\n  let someThingStyles = document.createElement('style')\n  head.appendChild(someThingStyles)\n  someThingStyles.setAttribute('type', 'text/css')\n  someThingStyles.setAttribute('id', id)\n  if (window.ActiveXObject) {\n    someThingStyles.styleSheet.cssText = cssText\n  } else {\n    someThingStyles.textContent = cssText\n  }\n}\n\nexport function addStyleWithoutId(cssText) {\n  let head = document.getElementsByTagName('head')[0]\n  let someThingStyles = document.createElement('style')\n  head.appendChild(someThingStyles)\n  someThingStyles.setAttribute('type', 'text/css')\n\n  if (window.ActiveXObject) {\n    someThingStyles.styleSheet.cssText = cssText\n  } else {\n    someThingStyles.textContent = cssText\n  }\n}\n\nexport function addScopedAttr(vdom, style, attr, component) {\n  if (options.scopedStyle) {\n    scopeVdom(attr, vdom)\n    style = scoper(style, attr)\n    if (style !== component._preCss) {\n      addStyle(style, attr)\n    }\n  } else if (style !== component._preCss) {\n    addStyleWithoutId(style)\n  }\n  component._preCss = style\n}\n\nexport function addScopedAttrStatic(vdom, style, attr) {\n  if (options.scopedStyle) {\n    scopeVdom(attr, vdom)\n    if (!options.staticStyleMapping[attr]) {\n      addStyle(scoper(style, attr), attr)\n      options.staticStyleMapping[attr] = true\n    }\n  } else if (!options.staticStyleMapping[attr]) {\n    addStyleWithoutId(style)\n    options.staticStyleMapping[attr] = true\n  }\n}\n\nexport function scopeVdom(attr, vdom) {\n  if (typeof vdom === 'object') {\n    vdom.attributes = vdom.attributes || {}\n    vdom.attributes[attr] = ''\n    vdom.css = vdom.css || {}\n    vdom.css[attr] = ''\n    vdom.children.forEach(child => scopeVdom(attr, child))\n  }\n}\n\nexport function scopeHost(vdom, css) {\n  if (typeof vdom === 'object' && css) {\n    vdom.attributes = vdom.attributes || {}\n    for (let key in css) {\n      vdom.attributes[key] = ''\n    }\n  }\n}\n","/* obaa 1.0.0\n * By dntzhang\n * Github: https://github.com/Tencent/omi\n * MIT Licensed.\n */\n\nvar obaa = function(target, arr, callback) {\n  var _observe = function(target, arr, callback) {\n    if (!target.$observer) target.$observer = this\n    var $observer = target.$observer\n    var eventPropArr = []\n    if (obaa.isArray(target)) {\n      if (target.length === 0) {\n        target.$observeProps = {}\n        target.$observeProps.$observerPath = '#'\n      }\n      $observer.mock(target)\n    }\n    for (var prop in target) {\n      if (target.hasOwnProperty(prop)) {\n        if (callback) {\n          if (obaa.isArray(arr) && obaa.isInArray(arr, prop)) {\n            eventPropArr.push(prop)\n            $observer.watch(target, prop)\n          } else if (obaa.isString(arr) && prop == arr) {\n            eventPropArr.push(prop)\n            $observer.watch(target, prop)\n          }\n        } else {\n          eventPropArr.push(prop)\n          $observer.watch(target, prop)\n        }\n      }\n    }\n    $observer.target = target\n    if (!$observer.propertyChangedHandler) $observer.propertyChangedHandler = []\n    var propChanged = callback ? callback : arr\n    $observer.propertyChangedHandler.push({\n      all: !callback,\n      propChanged: propChanged,\n      eventPropArr: eventPropArr\n    })\n  }\n  _observe.prototype = {\n    onPropertyChanged: function(prop, value, oldValue, target, path) {\n      if (value !== oldValue && this.propertyChangedHandler) {\n        var rootName = obaa._getRootName(prop, path)\n        for (\n          var i = 0, len = this.propertyChangedHandler.length;\n          i < len;\n          i++\n        ) {\n          var handler = this.propertyChangedHandler[i]\n          if (\n            handler.all ||\n            obaa.isInArray(handler.eventPropArr, rootName) ||\n            rootName.indexOf('Array-') === 0\n          ) {\n            handler.propChanged.call(this.target, prop, value, oldValue, path)\n          }\n        }\n      }\n      if (prop.indexOf('Array-') !== 0 && typeof value === 'object') {\n        this.watch(target, prop, target.$observeProps.$observerPath)\n      }\n    },\n    mock: function(target) {\n      var self = this\n      obaa.methods.forEach(function(item) {\n        target[item] = function() {\n          var old = Array.prototype.slice.call(this, 0)\n          var result = Array.prototype[item].apply(\n            this,\n            Array.prototype.slice.call(arguments)\n          )\n          if (new RegExp('\\\\b' + item + '\\\\b').test(obaa.triggerStr)) {\n            for (var cprop in this) {\n              if (this.hasOwnProperty(cprop) && !obaa.isFunction(this[cprop])) {\n                self.watch(this, cprop, this.$observeProps.$observerPath)\n              }\n            }\n            //todo\n            self.onPropertyChanged(\n              'Array-' + item,\n              this,\n              old,\n              this,\n              this.$observeProps.$observerPath\n            )\n          }\n          return result\n        }\n        target[\n          'pure' + item.substring(0, 1).toUpperCase() + item.substring(1)\n        ] = function() {\n          return Array.prototype[item].apply(\n            this,\n            Array.prototype.slice.call(arguments)\n          )\n        }\n      })\n    },\n    watch: function(target, prop, path) {\n      if (prop === '$observeProps' || prop === '$observer') return\n      if (obaa.isFunction(target[prop])) return\n      if (!target.$observeProps) target.$observeProps = {}\n      if (path !== undefined) {\n        target.$observeProps.$observerPath = path\n      } else {\n        target.$observeProps.$observerPath = '#'\n      }\n      var self = this\n      var currentValue = (target.$observeProps[prop] = target[prop])\n      Object.defineProperty(target, prop, {\n        get: function() {\n          return this.$observeProps[prop]\n        },\n        set: function(value) {\n          var old = this.$observeProps[prop]\n          this.$observeProps[prop] = value\n          self.onPropertyChanged(\n            prop,\n            value,\n            old,\n            this,\n            target.$observeProps.$observerPath\n          )\n        }\n      })\n      if (typeof currentValue == 'object') {\n        if (obaa.isArray(currentValue)) {\n          this.mock(currentValue)\n          if (currentValue.length === 0) {\n            if (!currentValue.$observeProps) currentValue.$observeProps = {}\n            if (path !== undefined) {\n              currentValue.$observeProps.$observerPath = path\n            } else {\n              currentValue.$observeProps.$observerPath = '#'\n            }\n          }\n        }\n        for (var cprop in currentValue) {\n          if (currentValue.hasOwnProperty(cprop)) {\n            this.watch(\n              currentValue,\n              cprop,\n              target.$observeProps.$observerPath + '-' + prop\n            )\n          }\n        }\n      }\n    }\n  }\n  return new _observe(target, arr, callback)\n}\n\nobaa.methods = [\n  'concat',\n  'copyWithin',\n  'entries',\n  'every',\n  'fill',\n  'filter',\n  'find',\n  'findIndex',\n  'forEach',\n  'includes',\n  'indexOf',\n  'join',\n  'keys',\n  'lastIndexOf',\n  'map',\n  'pop',\n  'push',\n  'reduce',\n  'reduceRight',\n  'reverse',\n  'shift',\n  'slice',\n  'some',\n  'sort',\n  'splice',\n  'toLocaleString',\n  'toString',\n  'unshift',\n  'values',\n  'size'\n]\nobaa.triggerStr = [\n  'concat',\n  'copyWithin',\n  'fill',\n  'pop',\n  'push',\n  'reverse',\n  'shift',\n  'sort',\n  'splice',\n  'unshift',\n  'size'\n].join(',')\n\nobaa.isArray = function(obj) {\n  return Object.prototype.toString.call(obj) === '[object Array]'\n}\n\nobaa.isString = function(obj) {\n  return typeof obj === 'string'\n}\n\nobaa.isInArray = function(arr, item) {\n  for (var i = arr.length; --i > -1; ) {\n    if (item === arr[i]) return true\n  }\n  return false\n}\n\nobaa.isFunction = function(obj) {\n  return Object.prototype.toString.call(obj) == '[object Function]'\n}\n\nobaa._getRootName = function(prop, path) {\n  if (path === '#') {\n    return prop\n  }\n  return path.split('-')[1]\n}\n\nobaa.add = function(obj, prop) {\n  var $observer = obj.$observer\n  $observer.watch(obj, prop)\n}\n\nobaa.set = function(obj, prop, value, exec) {\n  if (!exec) {\n    obj[prop] = value\n  }\n  var $observer = obj.$observer\n  $observer.watch(obj, prop)\n  if (exec) {\n    obj[prop] = value\n  }\n}\n\nArray.prototype.size = function(length) {\n  this.length = length\n}\n\nexport default obaa\n","const callbacks = []\nconst nextTickCallback = []\n\nexport function tick(fn, scope) {\n  callbacks.push({ fn, scope })\n}\n\nexport function fireTick() {\n  callbacks.forEach(item => {\n    item.fn.call(item.scope)\n  })\n\n  nextTickCallback.forEach(nextItem => {\n    nextItem.fn.call(nextItem.scope)\n  })\n  nextTickCallback.length = 0\n}\n\nexport function nextTick(fn, scope) {\n  nextTickCallback.push({ fn, scope })\n}\n","import obaa from './obaa'\nimport { fireTick } from './tick'\n\nexport function proxyUpdate(ele) {\n  let timeout = null\n  obaa(ele.data, () => {\n    if (ele._willUpdate) {\n      return\n    }\n    if (ele.constructor.mergeUpdate) {\n      clearTimeout(timeout)\n\n      timeout = setTimeout(() => {\n        ele.update()\n        fireTick()\n      }, 0)\n    } else {\n      ele.update()\n      fireTick()\n    }\n  })\n}\n","import {\n  SYNC_RENDER,\n  NO_RENDER,\n  FORCE_RENDER,\n  ASYNC_RENDER,\n  ATTR_KEY\n} from '../constants'\nimport options from '../options'\nimport { extend } from '../util'\nimport { enqueueRender } from '../render-queue'\nimport { getNodeProps } from './index'\nimport {\n  diff,\n  mounts,\n  diffLevel,\n  flushMounts,\n  recollectNodeTree,\n  removeChildren\n} from './diff'\nimport { createComponent, collectComponent } from './component-recycler'\nimport { removeNode } from '../dom/index'\nimport {\n  addScopedAttr,\n  addScopedAttrStatic,\n  getCtorName,\n  scopeHost\n} from '../style'\nimport { proxyUpdate } from '../observe'\n\n/** Set a component's `props` (generally derived from JSX attributes).\n *\t@param {Object} props\n *\t@param {Object} [opts]\n *\t@param {boolean} [opts.renderSync=false]\tIf `true` and {@link options.syncComponentUpdates} is `true`, triggers synchronous rendering.\n *\t@param {boolean} [opts.render=true]\t\t\tIf `false`, no render will be triggered.\n */\nexport function setComponentProps(component, props, opts, context, mountAll) {\n  if (component._disable) return\n  component._disable = true\n\n  if ((component.__ref = props.ref)) delete props.ref\n  if ((component.__key = props.key)) delete props.key\n\n  if (!component.base || mountAll) {\n    if (component.beforeInstall) component.beforeInstall()\n    if (component.install) component.install()\n    if (component.constructor.observe) {\n      proxyUpdate(component)\n    }\n  } else if (component.receiveProps) {\n    component.receiveProps(props, component.data, component.props)\n  } \n\n  if (context && context !== component.context) {\n    if (!component.prevContext) component.prevContext = component.context\n    component.context = context\n  }\n\n  if (!component.prevProps) component.prevProps = component.props\n  component.props = props\n\n  component._disable = false\n\n  if (opts !== NO_RENDER) {\n    if (\n      opts === SYNC_RENDER ||\n      options.syncComponentUpdates !== false ||\n      !component.base\n    ) {\n      renderComponent(component, SYNC_RENDER, mountAll)\n    } else {\n      enqueueRender(component)\n    }\n  }\n\n  if (component.__ref) component.__ref(component)\n}\n\nfunction shallowComparison(old, attrs) {\n  let name\n\n  for (name in old) {\n    if (attrs[name] == null && old[name] != null) {\n      return true\n    }\n  }\n\n  if (old.children.length > 0 || attrs.children.length > 0) {\n    return true\n  }\n\n  for (name in attrs) {\n    if (name != 'children') {\n      let type = typeof attrs[name]\n      if (type == 'function' || type == 'object') {\n        return true\n      } else if (attrs[name] != old[name]) {\n        return true\n      }\n    }\n  }\n}\n\n/** Render a Component, triggering necessary lifecycle events and taking High-Order Components into account.\n *\t@param {Component} component\n *\t@param {Object} [opts]\n *\t@param {boolean} [opts.build=false]\t\tIf `true`, component will build and store a DOM node if not already associated with one.\n *\t@private\n */\nexport function renderComponent(component, opts, mountAll, isChild) {\n  if (component._disable) return\n\n  let props = component.props,\n    data = component.data,\n    context = component.context,\n    previousProps = component.prevProps || props,\n    previousState = component.prevState || data,\n    previousContext = component.prevContext || context,\n    isUpdate = component.base,\n    nextBase = component.nextBase,\n    initialBase = isUpdate || nextBase,\n    initialChildComponent = component._component,\n    skip = false,\n    rendered,\n    inst,\n    cbase\n\n  // if updating\n  if (isUpdate) {\n    component.props = previousProps\n    component.data = previousState\n    component.context = previousContext\n    if (opts == FORCE_RENDER || shallowComparison(previousProps, props)) {\n      skip = false\n      if (component.beforeUpdate) {\n        component.beforeUpdate(props, data, context)\n      }\n    } else {\n      skip = true\n    }\n    component.props = props\n    component.data = data\n    component.context = context\n  }\n\n  component.prevProps = component.prevState = component.prevContext = component.nextBase = null\n\n  if (!skip) {\n    component.beforeRender && component.beforeRender()\n    rendered = component.render(props, data, context)\n\n    //don't rerender\n    if (component.css) {\n      addScopedAttrStatic(\n        rendered,\n        component.css(),\n        '_s' + getCtorName(component.constructor)\n      )\n    }\n\n    if (component.dynamicCss) {\n      addScopedAttr(\n        rendered,\n        component.dynamicCss(),\n        '_s' + component.elementId,\n        component\n      )\n    }\n\n    scopeHost(rendered, component.___scopedCssAttr)\n\n    // context to pass to the child, can be updated via (grand-)parent component\n    if (component.getChildContext) {\n      context = extend(extend({}, context), component.getChildContext())\n    }\n\n    let childComponent = rendered && rendered.nodeName,\n      toUnmount,\n      base,\n      ctor = options.mapping[childComponent]\n\n    if (ctor) {\n      // set up high order component link\n\n      let childProps = getNodeProps(rendered)\n      inst = initialChildComponent\n\n      if (inst && inst.constructor === ctor && childProps.key == inst.__key) {\n        setComponentProps(inst, childProps, SYNC_RENDER, context, false)\n      } else {\n        toUnmount = inst\n\n        component._component = inst = createComponent(ctor, childProps, context)\n        inst.nextBase = inst.nextBase || nextBase\n        inst._parentComponent = component\n        setComponentProps(inst, childProps, NO_RENDER, context, false)\n        renderComponent(inst, SYNC_RENDER, mountAll, true)\n      }\n\n      base = inst.base\n    } else {\n      cbase = initialBase\n\n      // destroy high order component link\n      toUnmount = initialChildComponent\n      if (toUnmount) {\n        cbase = component._component = null\n      }\n\n      if (initialBase || opts === SYNC_RENDER) {\n        if (cbase) cbase._component = null\n        base = diff(\n          cbase,\n          rendered,\n          context,\n          mountAll || !isUpdate,\n          initialBase && initialBase.parentNode,\n          true\n        )\n      }\n    }\n\n    if (initialBase && base !== initialBase && inst !== initialChildComponent) {\n      let baseParent = initialBase.parentNode\n      if (baseParent && base !== baseParent) {\n        baseParent.replaceChild(base, initialBase)\n\n        if (!toUnmount) {\n          initialBase._component = null\n          recollectNodeTree(initialBase, false)\n        }\n      }\n    }\n\n    if (toUnmount) {\n      unmountComponent(toUnmount)\n    }\n\n    component.base = base\n    if (base && !isChild) {\n      let componentRef = component,\n        t = component\n      while ((t = t._parentComponent)) {\n        ;(componentRef = t).base = base\n      }\n      base._component = componentRef\n      base._componentConstructor = componentRef.constructor\n    }\n  }\n\n  if (!isUpdate || mountAll) {\n    mounts.unshift(component)\n  } else if (!skip) {\n    // Ensure that pending componentDidMount() hooks of child components\n    // are called before the componentDidUpdate() hook in the parent.\n    // Note: disabled as it causes duplicate hooks, see https://github.com/developit/preact/issues/750\n    // flushMounts();\n\n   \n    if (component.afterUpdate) {\n      //deprecated\n      component.afterUpdate(previousProps, previousState, previousContext)\n    }\n    if (component.updated) {\n      component.updated(previousProps, previousState, previousContext)\n    }\n    if (options.afterUpdate) options.afterUpdate(component)\n  }\n\n  if (component._renderCallbacks != null) {\n    while (component._renderCallbacks.length)\n      component._renderCallbacks.pop().call(component)\n  }\n\n  if (!diffLevel && !isChild) flushMounts()\n}\n\n/** Apply the Component referenced by a VNode to the DOM.\n *\t@param {Element} dom\tThe DOM node to mutate\n *\t@param {VNode} vnode\tA Component-referencing VNode\n *\t@returns {Element} dom\tThe created/mutated element\n *\t@private\n */\nexport function buildComponentFromVNode(dom, vnode, context, mountAll) {\n  let c = dom && dom._component,\n    originalComponent = c,\n    oldDom = dom,\n    isDirectOwner = c && dom._componentConstructor === vnode.nodeName,\n    isOwner = isDirectOwner,\n    props = getNodeProps(vnode)\n  while (c && !isOwner && (c = c._parentComponent)) {\n    isOwner = c.constructor === vnode.nodeName\n  }\n\n  if (c && isOwner && (!mountAll || c._component)) {\n    setComponentProps(c, props, ASYNC_RENDER, context, mountAll)\n    dom = c.base\n  } else {\n    if (originalComponent && !isDirectOwner) {\n      unmountComponent(originalComponent)\n      dom = oldDom = null\n    }\n\n    c = createComponent(vnode.nodeName, props, context, vnode)\n    if (dom && !c.nextBase) {\n      c.nextBase = dom\n      // passing dom/oldDom as nextBase will recycle it if unused, so bypass recycling on L229:\n      oldDom = null\n    }\n    setComponentProps(c, props, SYNC_RENDER, context, mountAll)\n    dom = c.base\n\n    if (oldDom && dom !== oldDom) {\n      oldDom._component = null\n      recollectNodeTree(oldDom, false)\n    }\n  }\n\n  return dom\n}\n\n/** Remove a component from the DOM and recycle it.\n *\t@param {Component} component\tThe Component instance to unmount\n *\t@private\n */\nexport function unmountComponent(component) {\n  if (options.beforeUnmount) options.beforeUnmount(component)\n\n  let base = component.base\n\n  component._disable = true\n\n  if (component.uninstall) component.uninstall()\n\n  component.base = null\n\n  // recursively tear down & recollect high-order component children:\n  let inner = component._component\n  if (inner) {\n    unmountComponent(inner)\n  } else if (base) {\n    if (base[ATTR_KEY] && base[ATTR_KEY].ref) base[ATTR_KEY].ref(null)\n\n    component.nextBase = base\n\n    removeNode(base)\n    collectComponent(component)\n\n    removeChildren(base)\n  }\n\n  if (component.__ref) component.__ref(null)\n}\n","import { FORCE_RENDER } from './constants'\nimport { renderComponent } from './vdom/component'\nimport options from './options'\nimport { nProps, assign } from './util'\n\nlet id = 0\n\nexport default class Component {\n  static is = 'WeElement'\n\n  constructor(props, store) {\n    this.props = assign(\n      nProps(this.constructor.props),\n      this.constructor.defaultProps,\n      props\n    )\n    this.elementId = id++\n    this.data = this.constructor.data || this.data || {}\n\n    this._preCss = null\n\n    this.store = store\n  }\n\n  update(callback) {\n    this._willUpdate = true\n    if (callback)\n      (this._renderCallbacks = this._renderCallbacks || []).push(callback)\n    renderComponent(this, FORCE_RENDER)\n    if (options.componentChange) options.componentChange(this, this.base)\n    this._willUpdate = false\n  }\n\n  fire(type, data) {\n    Object.keys(this.props).every(key => {\n      if ('on' + type.toLowerCase() === key.toLowerCase()) {\n        this.props[key]({ detail: data })\n        return false\n      }\n      return true\n    })\n  }\n\n  render() {}\n}\n","import { diff } from './vdom/diff'\nimport options from './options'\n\n/** Render JSX into a `parent` Element.\n *\t@param {VNode} vnode\t\tA (JSX) VNode to render\n *\t@param {Element} parent\t\tDOM element to render into\n *\t@param {object} [store]\n *\t@public\n */\nexport function render(vnode, parent, store) {\n  parent = typeof parent === 'string' ? document.querySelector(parent) : parent\n\n  if (store && store.merge) {\n    store.merge =\n      typeof store.merge === 'string'\n        ? document.querySelector(store.merge)\n        : store.merge\n  }\n\n  return diff(store && store.merge, vnode, store, false, parent, false)\n}\n","import options from './options'\n\nconst OBJECTTYPE = '[object Object]'\nconst ARRAYTYPE = '[object Array]'\n\nexport function define(name, ctor) {\n  options.mapping[name] = ctor\n  if (ctor.data && !ctor.pure) {\n    ctor.updatePath = getUpdatePath(ctor.data)\n  }\n}\n\nexport function getUpdatePath(data) {\n  const result = {}\n  dataToPath(data, result)\n  return result\n}\n\nfunction dataToPath(data, result) {\n  Object.keys(data).forEach(key => {\n    result[key] = true\n    const type = Object.prototype.toString.call(data[key])\n    if (type === OBJECTTYPE) {\n      _objToPath(data[key], key, result)\n    } else if (type === ARRAYTYPE) {\n      _arrayToPath(data[key], key, result)\n    }\n  })\n}\n\nfunction _objToPath(data, path, result) {\n  Object.keys(data).forEach(key => {\n    result[path + '.' + key] = true\n    delete result[path]\n    const type = Object.prototype.toString.call(data[key])\n    if (type === OBJECTTYPE) {\n      _objToPath(data[key], path + '.' + key, result)\n    } else if (type === ARRAYTYPE) {\n      _arrayToPath(data[key], path + '.' + key, result)\n    }\n  })\n}\n\nfunction _arrayToPath(data, path, result) {\n  data.forEach((item, index) => {\n    result[path + '[' + index + ']'] = true\n    delete result[path]\n    const type = Object.prototype.toString.call(item)\n    if (type === OBJECTTYPE) {\n      _objToPath(item, path + '[' + index + ']', result)\n    } else if (type === ARRAYTYPE) {\n      _arrayToPath(item, path + '[' + index + ']', result)\n    }\n  })\n}\n","import Component from './component'\n\nexport default class ModelView extends Component {\n  static observe = true\n\n  static mergeUpdate = true\n\n  beforeInstall() {\n    this.data = this.vm.data\n  }\n}\n","/**\n * classNames based on https://github.com/JedWatson/classnames\n * by Jed Watson\n * Licensed under the MIT License\n * https://github.com/JedWatson/classnames/blob/master/LICENSE\n * modified by dntzhang\n */\n\nvar hasOwn = {}.hasOwnProperty\n\nexport function classNames() {\n  var classes = []\n\n  for (var i = 0; i < arguments.length; i++) {\n    var arg = arguments[i]\n    if (!arg) continue\n\n    var argType = typeof arg\n\n    if (argType === 'string' || argType === 'number') {\n      classes.push(arg)\n    } else if (Array.isArray(arg) && arg.length) {\n      var inner = classNames.apply(null, arg)\n      if (inner) {\n        classes.push(inner)\n      }\n    } else if (argType === 'object') {\n      for (var key in arg) {\n        if (hasOwn.call(arg, key) && arg[key]) {\n          classes.push(key)\n        }\n      }\n    }\n  }\n\n  return classes.join(' ')\n}\n\nexport function extractClass() {\n  const [props, ...args] = Array.prototype.slice.call(arguments, 0)\n  if (props.class) {\n    args.unshift(props.class)\n    delete props.class\n  } else if (props.className) {\n    args.unshift(props.className)\n    delete props.className\n  }\n  if (args.length > 0) {\n    return { class: classNames.apply(null, args) }\n  }\n}\n","function getGlobal() {\n  if (\n    typeof global !== 'object' ||\n    !global ||\n    global.Math !== Math ||\n    global.Array !== Array\n  ) {\n    if (typeof self !== 'undefined') {\n      return self\n    } else if (typeof window !== 'undefined') {\n      return window\n    } else if (typeof global !== 'undefined') {\n      return global\n    }\n    return (function() {\n      return this\n    })()\n  }\n  return global\n}\n\n/** Global options\n *\t@public\n *\t@namespace options {Object}\n */\nexport default {\n  scopedStyle: true,\n  mapping: {},\n  isWeb: true,\n  staticStyleMapping: {},\n  doc: typeof document === 'object' ? document : null,\n  root: getGlobal(),\n  //styleCache :[{ctor:ctor,ctorName:ctorName,style:style}]\n  styleCache: []\n  //componentChange(component, element) { },\n  /** If `true`, `prop` changes trigger synchronous component updates.\n   *\t@name syncComponentUpdates\n   *\t@type Boolean\n   *\t@default true\n   */\n  //syncComponentUpdates: true,\n\n  /** Processes all created VNodes.\n   *\t@param {VNode} vnode\tA newly-created VNode to normalize/process\n   */\n  //vnode(vnode) { }\n\n  /** Hook invoked after a component is mounted. */\n  //afterMount(component) { },\n\n  /** Hook invoked after the DOM is updated with a component's latest render. */\n  //afterUpdate(component) { }\n\n  /** Hook invoked immediately before a component is unmounted. */\n  // beforeUnmount(component) { }\n}\n","export function rpx(str) {\n  return str.replace(/([1-9]\\d*|0)(\\.\\d*)*rpx/g, (a, b) => {\n    return (window.innerWidth * Number(b)) / 750 + 'px'\n  })\n}\n","import { h, h as createElement } from './h'\nimport { cloneElement } from './clone-element'\nimport Component from './component'\nimport { render } from './render'\nimport { rerender } from './render-queue'\nimport options from './options'\nimport { define } from './define'\nimport { rpx } from './rpx'\nimport ModelView from './model-view'\nimport { classNames, extractClass } from './class'\n\nconst WeElement = Component\nconst defineElement = define\n\noptions.root.Omi = {\n  h,\n  createElement,\n  cloneElement,\n  Component,\n  render,\n  rerender,\n  options,\n  WeElement,\n  define,\n  rpx,\n  ModelView,\n  defineElement,\n  classNames,\n  extractClass\n}\noptions.root.omi = Omi\noptions.root.Omi.version = 'omio-1.2.4'\n\nexport default {\n  h,\n  createElement,\n  cloneElement,\n  Component,\n  render,\n  rerender,\n  options,\n  WeElement,\n  define,\n  rpx,\n  ModelView,\n  defineElement,\n  classNames,\n  extractClass\n}\n\nexport {\n  h,\n  createElement,\n  cloneElement,\n  Component,\n  render,\n  rerender,\n  options,\n  WeElement,\n  define,\n  rpx,\n  ModelView,\n  defineElement,\n  classNames,\n  extractClass\n}\n"]}